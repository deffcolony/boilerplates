global:
  checkNewVersion: true
  sendAnonymousUsage: false
serversTransport:
  insecureSkipVerify: true

entryPoints:
  # Not used in apps, but redirect everything from HTTP to HTTPS
  http:
    address: :80
    forwardedHeaders:
      trustedIPs: &trustedIps
        # Start of Clouflare public IP list for HTTP requests, remove this if you don't use it
        - 173.245.48.0/20
        - 103.21.244.0/22
        - 103.22.200.0/22
        - 103.31.4.0/22
        - 141.101.64.0/18
        - 108.162.192.0/18
        - 190.93.240.0/20
        - 188.114.96.0/20
        - 197.234.240.0/22
        - 198.41.128.0/17
        - 162.158.0.0/15
        - 104.16.0.0/12
        - 172.64.0.0/13
        - 131.0.72.0/22
        - 2400:cb00::/32
        - 2606:4700::/32
        - 2803:f800::/32
        - 2405:b500::/32
        - 2405:8100::/32
        - 2a06:98c0::/29
        - 2c0f:f248::/32
        # End of Cloudlare public IP list
    http:
      redirections:
        entryPoint:
          to: https
          scheme: https

  # HTTPS endpoint, with domain wildcard
  https:
    address: :443
    forwardedHeaders:
     # Reuse list of Cloudflare Trusted IP's above for HTTPS requests
      trustedIPs: *trustedIps
    http:
      tls:
        # Generate a wildcard domain certificate
        certResolver: cloudflare
        domains:
#          - main: "local.DOMAIN.COM" # uncomment to enable certs for internal domain DNS
#            sans:                   # uncomment to enable certs for internal domain DNS
#              - "*.local.DOMAIN.COM" # uncomment to enable certs for internal domain DNS
          - main: "DOMAIN.COM"
            sans:
              - "*.DOMAIN.COM"
      middlewares:
        - securityHeaders@file
        - crowdsec-bouncer@file
        - gzip@file
        - cloudflarewarp@file

  metrics:
      address: ":8083"

providers:
  providersThrottleDuration: 2s

  # File provider for connecting things that are outside of docker / defining middleware
  file:
    filename: /etc/traefik/fileConfig.yml
    watch: true

  # Docker provider for connecting all apps that are inside of the docker network
  docker:
    watch: true
    network: proxy # Add Your Docker Network Name Here
    # Default host rule to containername.domain.example
    defaultRule: "Host(`{{ index .Labels \"com.docker.compose.service\"}}.DOMAIN.COM`)"
#    swarmModeRefreshSeconds: 15s # Enable if swarm is used https://doc.traefik.io/traefik/master/migration/v2-to-v3/
    exposedByDefault: false
    endpoint: "unix:///var/run/docker.sock"

# Enable traefik ui
api:
  dashboard: true
  insecure: true
  debug: true

metrics:
  prometheus:
    addEntryPointsLabels: true
    addRoutersLabels: true
    addServicesLabels: true
    entryPoint: metrics

# :8083/ping
ping:
  entryPoint: metrics


log:
  level: INFO # DEBUG, INFO, WARN, ERROR, FATAL, and PANIC
  filePath: "/logs/traefik.log"
  format: json

accessLog:
  filePath: "/var/log/crowdsec/traefik_access.log"
  bufferingSize: 50
  format: json
  filters:
    statusCodes:
      - "400-404"
      - "300-302"
      - "500"
    retryAttempts: true
    minDuration: "10ms"
  # fields:
  #   defaultMode: foobar
  #   names:
  #     name0: foobar
  #     name1: foobar
  #   headers:
  #     defaultMode: foobar
  #     names:
  #       name0: foobar
  #       name1: foobar
#

# Use letsencrypt to generate ssl serficiates
certificatesResolvers:
  cloudflare:
    acme:
      email: info@DOMAIN.COM  # change to your provider account email address.
      storage: /etc/traefik/acme.json
      caServer: https://acme-v02.api.letsencrypt.org/directory # prod (default)
#      caServer: https://acme-staging-v02.api.letsencrypt.org/directory # staging
      dnsChallenge:
        provider: cloudflare
#        disablePropagationCheck: true # uncomment this if you have issues pulling certificates through cloudflare, By setting this flag to true disables the need to wait for the propagation of the TXT record to all authoritative name servers.
#        delayBeforeCheck: 60s # uncomment along with disablePropagationCheck if needed to ensure the TXT record is ready before verification is attempted
        resolvers:
          - "1.1.1.1:53"
          - "1.0.0.1:53"


# Plugins (optional)
# Real IP from Cloudflare Proxy/Tunnel
experimental:
  plugins:
    cloudflarewarp:
      moduleName: "github.com/BetterCorp/cloudflarewarp"
      version: "v1.3.3"